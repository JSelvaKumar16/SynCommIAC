module "network" {
  source               = "../../modules/network"
  vpc_cidr             = var.vpc_cidr
  public_subnet_count  = var.public_subnet_count
  private_subnet_count = var.private_subnet_count
  public_subnet_cidrs  = var.public_subnet_cidrs
  private_subnet_cidrs = var.private_subnet_cidrs
  project_name         = var.project_name
  environment          = var.environment
  default_tags         = { Environment = var.environment, Project = var.project_name }
}

module "compute" {
  source         = "../../modules/compute"
  instance_count = var.instance_count
  ami_id         = var.ami_id
  instance_type  = var.instance_type
  subnet_id      = module.network.private_subnets[0]
  vpc_id         = module.network.vpc_id
  project_name   = var.project_name
  environment    = var.environment
  default_tags   = { Environment = var.environment, Project = var.project_name }
}

module "storage" {
  source                     = "../../modules/storage"
  project_name               = var.project_name
  environment                = var.environment
  force_destroy              = var.force_destroy
  enable_versioning          = var.enable_versioning
  encryption_algorithm       = var.encryption_algorithm
  enable_lifecycle_rules     = var.enable_lifecycle_rules
  lifecycle_transition_days  = var.lifecycle_transition_days
  lifecycle_storage_class    = var.lifecycle_storage_class
  lifecycle_expiration_days  = var.lifecycle_expiration_days
  noncurrent_version_expiration_days = var.noncurrent_version_expiration_days
  acl                        = var.acl
  policy_json                = var.policy_json
  default_tags               = { Environment = var.environment, Project = var.project_name }
}

module "iam" {
  source       = "../../modules/iam"
  policies     = {
    ec2_policy       = "../../modules/iam/policy-templates/ec2_policy.json"
    s3_policy        = "../../modules/iam/policy-templates/s3_policy.json"
    iam_policy       = "../../modules/iam/policy-templates/iam_policy.json"
    compute_fedramp  = "../../modules/iam/policy-templates/compute_fedramp_policy.json"
    gcs_fedramp      = "../../modules/iam/policy-templates/gcs_fedramp_policy.json"
  }
  project_name = var.project_name
  environment  = var.environment
  default_tags = { Environment = var.environment, Project = var.project_name }
}

module "database" {
  source              = "../../modules/database"
  create_db           = var.create_db
  allocated_storage   = var.allocated_storage
  engine              = var.engine
  engine_version      = var.engine_version
  instance_class      = var.instance_class
  db_name             = var.db_name
  username            = var.username
  password            = var.password
  parameter_group     = var.parameter_group
  publicly_accessible = var.publicly_accessible
  skip_final_snapshot = var.skip_final_snapshot
  security_group_ids  = [module.network.vpc_id]
  subnet_ids          = module.network.private_subnets
  project_name        = var.project_name
  environment         = var.environment
  default_tags        = { Environment = var.environment, Project = var.project_name }
}

module "billing" {
  source                = "../../modules/billing"
  budget_limit          = var.budget_limit
  notification_threshold = var.notification_threshold
  notification_email     = var.notification_email
  project_name           = var.project_name
  environment            = var.environment
  default_tags           = { Environment = var.environment, Project = var.project_name }
}
